tree
version=v3
num_class=1
num_tree_per_iteration=1
label_index=0
max_feature_idx=0
objective=regression
feature_names=Column_0
feature_infos=[-5:4.75]
tree_sizes=1391

Tree=0
num_leaves=16
num_cat=0
split_feature=0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
split_gain=2500 312.5 312.5 39.0625 39.0625 39.0625 39.0625 4.6875 4.6875 4.6875 4.6875 4.6875 4.6875 4.6875 4.6875
threshold=-1.0000000180025095e-35 -2.6249999999999996 2.3750000000000004 -3.8749999999999996 1.1250000000000002 -1.3749999999999998 3.6250000000000004 -4.3749999999999991 0.62500000000000011 -1.8749999999999998 3.1250000000000004 -3.1249999999999996 1.8750000000000002 -0.62499999999999989 4.3750000000000009
decision_type=2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
left_child=1 3 4 7 8 9 10 -1 -2 -3 -4 -5 -6 -7 -8
right_child=2 5 6 11 12 13 14 -9 -10 -11 -12 -13 -14 -15 -16
leaf_value=-0.58750000000000002 -0.087499999999999994 -0.33750000000000002 0.16250000000000003 -0.46250000000000002 0.037500000000000006 -0.21250000000000002 0.28750000000000003 -0.52500000000000002 -0.024999999999999994 -0.27500000000000002 0.22500000000000003 -0.40000000000000002 0.10000000000000001 -0.14999999999999999 0.35000000000000003
leaf_weight=30 30 30 30 30 30 30 30 20 20 20 20 20 20 20 20
leaf_count=30 30 30 30 30 30 30 30 20 20 20 20 20 20 20 20
internal_value=-0.125 -0.375 0.125 -0.5 0 -0.25 0.25 -0.5625 -0.0625 -0.3125 0.1875 -0.4375 0.0625 -0.1875 0.3125
internal_weight=0 200 200 100 100 100 100 50 50 50 50 50 50 50 50
internal_count=400 200 200 100 100 100 100 50 50 50 50 50 50 50 50
is_linear=0
shrinkage=1


end of trees

feature_importances:
Column_0=15

parameters:
[boosting: gbdt]
[objective: regression]
[metric: ]
[tree_learner: serial]
[device_type: cpu]
[linear_tree: 0]
[data: ]
[valid: ]
[num_iterations: 1]
[learning_rate: 0.1]
[num_leaves: 31]
[num_threads: 0]
[deterministic: 0]
[force_col_wise: 0]
[force_row_wise: 0]
[histogram_pool_size: -1]
[max_depth: -1]
[min_data_in_leaf: 20]
[min_sum_hessian_in_leaf: 0.001]
[bagging_fraction: 1]
[pos_bagging_fraction: 1]
[neg_bagging_fraction: 1]
[bagging_freq: 0]
[bagging_seed: 3]
[feature_fraction: 1]
[feature_fraction_bynode: 1]
[feature_fraction_seed: 2]
[extra_trees: 0]
[extra_seed: 6]
[early_stopping_round: 0]
[first_metric_only: 0]
[max_delta_step: 0]
[lambda_l1: 0]
[lambda_l2: 0]
[linear_lambda: 0]
[min_gain_to_split: 0]
[drop_rate: 0.1]
[max_drop: 50]
[skip_drop: 0.5]
[xgboost_dart_mode: 0]
[uniform_drop: 0]
[drop_seed: 4]
[top_rate: 0.2]
[other_rate: 0.1]
[min_data_per_group: 100]
[max_cat_threshold: 32]
[cat_l2: 10]
[cat_smooth: 10]
[max_cat_to_onehot: 4]
[top_k: 20]
[monotone_constraints: ]
[monotone_constraints_method: basic]
[monotone_penalty: 0]
[feature_contri: ]
[forcedsplits_filename: ]
[refit_decay_rate: 0.9]
[cegb_tradeoff: 1]
[cegb_penalty_split: 0]
[cegb_penalty_feature_lazy: ]
[cegb_penalty_feature_coupled: ]
[path_smooth: 0]
[interaction_constraints: ]
[verbosity: 1]
[saved_feature_importance_type: 0]
[max_bin: 255]
[max_bin_by_feature: ]
[min_data_in_bin: 3]
[bin_construct_sample_cnt: 200000]
[data_random_seed: 1]
[is_enable_sparse: 1]
[enable_bundle: 1]
[use_missing: 1]
[zero_as_missing: 0]
[feature_pre_filter: 1]
[pre_partition: 0]
[two_round: 0]
[header: 0]
[label_column: ]
[weight_column: ]
[group_column: ]
[ignore_column: ]
[categorical_feature: ]
[forcedbins_filename: ]
[objective_seed: 5]
[num_class: 1]
[is_unbalance: 0]
[scale_pos_weight: 1]
[sigmoid: 1]
[boost_from_average: 1]
[reg_sqrt: 0]
[alpha: 0.9]
[fair_c: 1]
[poisson_max_delta_step: 0.7]
[tweedie_variance_power: 1.5]
[lambdarank_truncation_level: 30]
[lambdarank_norm: 1]
[label_gain: ]
[eval_at: ]
[multi_error_top_k: 1]
[auc_mu_weights: ]
[num_machines: 1]
[local_listen_port: 12400]
[time_out: 120]
[machine_list_filename: ]
[machines: ]
[gpu_platform_id: -1]
[gpu_device_id: -1]
[gpu_use_dp: 0]
[num_gpu: 1]

end of parameters

pandas_categorical:null
